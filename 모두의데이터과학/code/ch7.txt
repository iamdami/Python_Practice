7장

import networkx as nx
import matplotlib.pyplot as plt

borders = nx.Graph()
not_borders1 = nx.DiGraph() # 나중을 위해 만들어 둔다.
not_borders2 = nx.MultiGraph() # 나중을 위해 만들어 둔다.
---------------------------------------


borders = nx.read_graphml('borders-1.graphml')
---------------------------------------


borders.add_node("Zimbabwe")
borders.add_nodes_from(["Lugandon", "Zambia", "Portugal", "Kuwait",
                        "Colombia"]) 
borders.remove_node("Lugandon")
borders.add_edge("Zambia", "Zimbabwe")
borders.add_edges_from([("Uganda", "Rwanda"), ("Uganda", "Kenya"),
                        ("Uganda", "South Sudan"), 
                        ("Uganda", "Tanzania"), ("Uganda", "Democratic Republic of the Congo")])
---------------------------------------


len(borders)


borders.nodes()


borders.node


borders.edge


borders.edges()[:5]


borders.neighbors("Germany")


borders.degree("Poland")


borders.degree()
---------------------------------------


import pandas
degrees = pandas.DataFrame(list(borders.degree().items()),
          columns=("country","degree")).set_index("country")
degrees.sort("degree").tail(4)
---------------------------------------


nx.clustering(nx.Graph(not_borders1)) # 이제 작동한다. 


nx.clustering(borders)


nx.clustering(borders, "Lithuania") 


list(nx.connected_components(borders))# 작동한다!


[len(x) for x in nx.connected_component_subgraphs(borders)]


borders.nodes(data=True)


borders.edges(data=True)
---------------------------------------


nx.find_cliques(nx.Graph(not_borders1)) # 방향성이 없는 그래프로 바꾸면 사용할 수 있다!
list(nx.find_cliques(borders))


nx.isolates(borders)
---------------------------------------


import community
partition = community.best_partition(borders)
partition
---------------------------------------


community.modularity(partition, borders)
